// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ComandaDigital.Migrations
{
    [DbContext(typeof(ComandaDigitalContext))]
    [Migration("20191106031357_Varios2")]
    partial class Varios2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ComandaDigital.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cpf");

                    b.Property<string>("Email");

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("ComandaDigital.Models.Estabelecimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Estabelecimento");
                });

            modelBuilder.Entity("ComandaDigital.Models.ItemPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataAtualizacao");

                    b.Property<DateTime?>("DataCriacao");

                    b.Property<string>("Descricao");

                    b.Property<int?>("MesaId");

                    b.Property<int?>("PedidoId");

                    b.Property<int?>("ProdutoId");

                    b.Property<int>("Quantidade");

                    b.Property<int>("Status");

                    b.Property<int?>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("MesaId");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ItemPedido");
                });

            modelBuilder.Entity("ComandaDigital.Models.Mesa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.Property<int?>("EstabelecimentoId");

                    b.Property<string>("Numero");

                    b.Property<int>("Quantidade");

                    b.HasKey("Id");

                    b.HasIndex("EstabelecimentoId");

                    b.ToTable("Mesa");
                });

            modelBuilder.Entity("ComandaDigital.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("MesaId");

                    b.Property<int?>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("MesaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("ComandaDigital.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("EstabelecimentoId");

                    b.Property<string>("Nome");

                    b.Property<decimal?>("ValorCusto");

                    b.Property<decimal?>("ValorVenda");

                    b.HasKey("Id");

                    b.HasIndex("EstabelecimentoId");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("ComandaDigital.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cpf");

                    b.Property<string>("Email");

                    b.Property<string>("Nome");

                    b.Property<string>("Senha");

                    b.Property<string>("Telefone");

                    b.Property<int>("TipoUsuario");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ComandaDigital.Models.ItemPedido", b =>
                {
                    b.HasOne("ComandaDigital.Models.Mesa")
                        .WithMany("ItensPedidos")
                        .HasForeignKey("MesaId");

                    b.HasOne("ComandaDigital.Models.Pedido")
                        .WithMany("ItensPedidos")
                        .HasForeignKey("PedidoId");

                    b.HasOne("ComandaDigital.Models.Produto", "Produto")
                        .WithMany("ItensPedidos")
                        .HasForeignKey("ProdutoId");

                    b.HasOne("ComandaDigital.Models.Usuario", "Usuario")
                        .WithMany("ItensPedidos")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("ComandaDigital.Models.Mesa", b =>
                {
                    b.HasOne("ComandaDigital.Models.Estabelecimento", "Estabelecimento")
                        .WithMany()
                        .HasForeignKey("EstabelecimentoId");
                });

            modelBuilder.Entity("ComandaDigital.Models.Pedido", b =>
                {
                    b.HasOne("ComandaDigital.Models.Mesa", "Mesa")
                        .WithMany()
                        .HasForeignKey("MesaId");

                    b.HasOne("ComandaDigital.Models.Usuario", "Usuario")
                        .WithMany("Pedidos")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("ComandaDigital.Models.Produto", b =>
                {
                    b.HasOne("ComandaDigital.Models.Estabelecimento", "Estabelecimento")
                        .WithMany()
                        .HasForeignKey("EstabelecimentoId");
                });
#pragma warning restore 612, 618
        }
    }
}
